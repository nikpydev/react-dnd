{"version":3,"sources":["components/TodoDragDropDemo.component.tsx","App.tsx","index.tsx"],"names":["TodoDragDropDemo","useState","id","taskName","type","backgroundColor","taskList","setTaskList","onDragOver","event","preventDefault","onDrop","category","dataTransfer","getData","tasks","map","task","inProgress","Done","forEach","push","key","onDragStart","console","log","setData","draggable","className","style","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QA2GeA,EA9FU,WAAO,IAAD,EACGC,mBAAsB,CACpD,CACEC,GAAI,IACJC,SAAU,YACVC,KAAM,aACNC,gBAAiB,OAEnB,CACEH,GAAI,IACJC,SAAU,YACVC,KAAM,aACNC,gBAAiB,SAEnB,CACEH,GAAI,IACJC,SAAU,gBACVC,KAAM,OACNC,gBAAiB,QAEnB,CACEH,GAAI,IACJC,SAAU,gBACVC,KAAM,OACNC,gBAAiB,WAxBQ,mBACtBC,EADsB,KACZC,EADY,KAiCvBC,EAAa,SAACC,GAClBA,EAAMC,kBAGFC,EAAS,SAACF,EAAwBG,GACtC,IAAIT,EAAWM,EAAMI,aAAaC,QAAQ,YAEtCC,EAAQT,EAASU,KAAI,SAACC,GAIxB,OAHIA,EAAKd,WAAaA,IACpBc,EAAKb,KAAOQ,GAEPK,KAGTV,EAAYQ,IAGVA,EAAe,CACjBG,WAAY,GACZC,KAAM,IAiBR,OAdAb,EAASc,SAAQ,SAACH,GAChBF,EAAME,EAAKb,MAAMiB,KACf,yBACEC,IAAKL,EAAKf,GACVqB,YAAa,SAACd,GAAD,OA/BC,SAACA,EAAwBN,GAC3CqB,QAAQC,IAAI,qBAAsBtB,GAClCM,EAAMI,aAAaa,QAAQ,WAAYvB,GA6BXoB,CAAYd,EAAOQ,EAAKd,WAChDwB,WAAS,EACTC,UAAU,YACVC,MAAO,CAAExB,gBAAiBY,EAAKZ,kBAE9BY,EAAKd,cAMV,yBAAKyB,UAAU,kBACb,wBAAIA,UAAU,QAAd,0BACA,yBACEA,UAAU,aACVpB,WAAY,SAACC,GAAD,OAAWD,EAAWC,IAClCE,OAAQ,SAACF,GACPE,EAAOF,EAAO,gBAGhB,0BAAMmB,UAAU,gBAAhB,eACCb,EAAMG,YAET,yBACEU,UAAU,YACVpB,WAAY,SAACC,GAAD,OAAWD,EAAWC,IAClCE,OAAQ,SAACF,GAAD,OAAWE,EAAOF,EAAO,UAEjC,0BAAMmB,UAAU,gBAAhB,QACCb,EAAMI,QCzFAW,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCFNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a106c6bb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\ninterface Task {\r\n  id: string;\r\n  taskName: string;\r\n  type: string;\r\n  backgroundColor: string;\r\n}\r\n\r\ninterface Tasks {\r\n  [taskType: string]: Array<any>;\r\n}\r\n\r\nconst TodoDragDropDemo = () => {\r\n  const [taskList, setTaskList] = useState<Array<Task>>([\r\n    {\r\n      id: \"1\",\r\n      taskName: \"Read book\",\r\n      type: \"inProgress\",\r\n      backgroundColor: \"red\",\r\n    },\r\n    {\r\n      id: \"2\",\r\n      taskName: \"Pay bills\",\r\n      type: \"inProgress\",\r\n      backgroundColor: \"green\",\r\n    },\r\n    {\r\n      id: \"3\",\r\n      taskName: \"Go to the gym\",\r\n      type: \"Done\",\r\n      backgroundColor: \"blue\",\r\n    },\r\n    {\r\n      id: \"4\",\r\n      taskName: \"Play baseball\",\r\n      type: \"Done\",\r\n      backgroundColor: \"green\",\r\n    },\r\n  ]);\r\n\r\n  const onDragStart = (event: React.DragEvent, taskName: string) => {\r\n    console.log(\"dragstart on div: \", taskName);\r\n    event.dataTransfer.setData(\"taskName\", taskName);\r\n  };\r\n\r\n  const onDragOver = (event: React.DragEvent) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onDrop = (event: React.DragEvent, category: string) => {\r\n    let taskName = event.dataTransfer.getData(\"taskName\");\r\n\r\n    let tasks = taskList.map((task) => {\r\n      if (task.taskName === taskName) {\r\n        task.type = category;\r\n      }\r\n      return task;\r\n    });\r\n\r\n    setTaskList(tasks);\r\n  };\r\n\r\n  var tasks: Tasks = {\r\n    inProgress: [],\r\n    Done: [],\r\n  };\r\n\r\n  taskList.forEach((task) => {\r\n    tasks[task.type].push(\r\n      <div\r\n        key={task.id}\r\n        onDragStart={(event) => onDragStart(event, task.taskName)}\r\n        draggable\r\n        className=\"draggable\"\r\n        style={{ backgroundColor: task.backgroundColor }}\r\n      >\r\n        {task.taskName}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"drag-container\">\r\n      <h2 className=\"head\">To Do List Drag & Drop</h2>\r\n      <div\r\n        className=\"inProgress\"\r\n        onDragOver={(event) => onDragOver(event)}\r\n        onDrop={(event) => {\r\n          onDrop(event, \"inProgress\");\r\n        }}\r\n      >\r\n        <span className=\"group-header\">In Progress</span>\r\n        {tasks.inProgress}\r\n      </div>\r\n      <div\r\n        className=\"droppable\"\r\n        onDragOver={(event) => onDragOver(event)}\r\n        onDrop={(event) => onDrop(event, \"Done\")}\r\n      >\r\n        <span className=\"group-header\">Done</span>\r\n        {tasks.Done}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoDragDropDemo;\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport TodoDragDropDemo from \"./components/TodoDragDropDemo.component\";\n\nfunction App() {\n  return (\n    <div>\n      <TodoDragDropDemo />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}